from aiogram import Bot, Dispatcher, executor, types
from config import CHAT_ID, ADMIN_ID, TOKEN
import user_keyboards
from aiogram.types import ReplyKeyboardRemove
from aiogram.dispatcher import FSMContext
from sql_request import *
import admin_keyboards
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage

bot = Bot(token=TOKEN)

class UserState(StatesGroup):
    admin_panel = State()
    forward_group1 = State()
    spam = State()
    course = State()
    order_delete = State()

async def admin_panel_on(message: types.Message):
    if ADMIN_ID == message.from_user.id:
        await message.answer('–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –≤–∫–ª—é—á–µ–Ω–∞', reply_markup=admin_keyboards.admin_panel)
        await UserState.admin_panel.set()
    else:
        await message.answer("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞")

async def admin_panel(message: types.Message, state: FSMContext):
    if message.text == "üì® –†–∞—Å—Å—ã–ª–∫–∞ –≤ –±–æ—Ç–∞":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏")
        await UserState.spam.set()
    elif message.text == "‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
        await UserState.forward_group1.set()
    elif message.text == "¬• –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å —é–∞–Ω—è":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å —é–∞–Ω—è —Å —Ç–æ—á–∫–æ–π\n"
                             "–ù–∞–ø—Ä–∏–º–µ—Ä 12.7")
        await UserState.course.set()
    elif message.text == "¬• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—É—Ä—Å —é–∞–Ω—è":
        await uan_look(message.from_user.id)
    elif message.text == "üìú –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—è–≤–∫–∏":
        await checking_order(message.from_user.id)
    elif message.text == "‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ <b>user_name</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á—å—é –∑–∞—è–≤–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å, –±–µ–∑ @\n"
                             "–ù–∞–ø—Ä–∏–º–µ—Ä Yarosalvxxxxxx", parse_mode='HTML')
        await UserState.order_delete.set()
    elif message.text == "üü• –í—ã–∫–ª—é—á–∏—Ç—å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å" or message.text == "/off":
        await message.answer('–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –≤—ã–∫–ª—é—á–µ–Ω–∞', reply_markup=ReplyKeyboardRemove())
        await state.finish()
    else:
        await message.answer("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
        await UserState.admin_panel.set()

async def order_delete(message: types.Message, state: FSMContext):
    await delete_order(message.text.strip(), message.from_user.id)

async def uan_course(message: types.Message, state: FSMContext):
    price = message.text
    await create_uan(price)
    await message.answer(f'–ö—É—Ä—Å —é–∞–Ω—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {price}')
    await UserState.admin_panel.set()

async def forward_group(message: types.Message, state: FSMContext):
    await bot.send_message(CHAT_ID, message.text)
    await message.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É")
    await UserState.admin_panel.set()

async def spam_user(message: types.Message, state: FSMContext):
    await user_id(message)
    await message.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
    await UserState.admin_panel.set()

async def on_start():
    await bot.send_message(1002464520, "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")

async def off_start():
    await bot.send_message(1002464520, "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")